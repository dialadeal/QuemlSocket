/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Xml.Linq;
using Twilio.Converters;
using Twilio.Types;

namespace Twilio.TwiML.Voice
{
    /// <summary>
    /// Menu TwiML Verb
    /// </summary>
    public class Menu : TwiML
    {
        public Menu SetKeyPress(string number,TwiML onKeyPress)
        {
            var newChild = new KeyPress(number);
            newChild.Append(onKeyPress);
            this.Append(newChild);
            return this;
        }


        public Menu() : base("Menu")
        {
        }

        /// <summary>
        /// Return the attributes of the TwiML tag
        /// </summary>
        protected override List<XAttribute> GetElementAttributes()
        {
            var attributes = new List<XAttribute>();
            return attributes;
        }

        /// <summary>
        /// Create a new <Say/> element and append it as a child of this element.
        /// </summary>
        /// <param name="message"> Message to say, the body of the TwiML Element. </param>
        /// <param name="voice"> Voice to use </param>
        /// <param name="loop"> Times to loop message </param>
        /// <param name="language"> Message langauge </param>
        public Menu Say(string message = null,
            Say.VoiceEnum voice = null,
            int? loop = null,
            Say.LanguageEnum language = null)
        {
            var newChild = new Say(message, voice, loop, language);
            this.Append(newChild);
            return this;
        }

        /// <summary>
        /// Append a <Say/> element as a child of this element
        /// </summary>
        /// <param name="say"> A Say instance. </param>
        [System.Obsolete("This method is deprecated, use .Append() instead.")]
        public Menu Say(Say say)
        {
            this.Append(say);
            return this;
        }
        
        /// <summary>
        /// Create a new <Play/> element and append it as a child of this element.
        /// </summary>
        /// <param name="url"> Media URL, the body of the TwiML Element. </param>
        /// <param name="loop"> Times to loop media </param>
        /// <param name="digits"> Play DTMF tones for digits </param>
        public Menu Play(Uri url = null, int? loop = null, string digits = null)
        {
            var newChild = new Play(url, loop, digits);
            this.Append(newChild);
            return this;
        }

        /// <summary>
        /// Append a <Play/> element as a child of this element
        /// </summary>
        /// <param name="play"> A Play instance. </param>
        [System.Obsolete("This method is deprecated, use .Append() instead.")]
        public Menu Play(Play play)
        {
            this.Append(play);
            return this;
        }

        /// <summary>
        /// Append a child TwiML element to this element returning this element to allow chaining.
        /// </summary>
        /// <param name="childElem"> Child TwiML element to add </param>
        public new Menu Append(TwiML childElem)
        {
            return (Menu)base.Append(childElem);
        }
    }
    
    public class KeyPress :TwiML 
    {
        public string NumberPressed { get; }
        
        public KeyPress(string number) : base("KeyPress")
        {
            this.NumberPressed = number;
        }

        protected override List<XAttribute> GetElementAttributes()
        {
            var attributes = new List<XAttribute>();
            if (this.NumberPressed != null)
            {
                attributes.Add(new XAttribute("number", this.NumberPressed));
            }
            return attributes;
        }
    }
}
