/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Xml.Linq;
using Twilio.Converters;
using Twilio.Types;

namespace Twilio.TwiML.Voice
{
    /// <summary>
    /// Gather TwiML Verb
    /// </summary>
    public class Manu : TwiML
    {
        public TwiML On1 { get; set; }

        public TwiML On2 { get; set; }
        public TwiML On3 { get; set; }

        public TwiML On4 { get; set; }
        public TwiML On5 { get; set; }

        public TwiML On6 { get; set; }
        public TwiML On7 { get; set; }

        public TwiML On8 { get; set; }
        public TwiML On9 { get; set; }
        
        public TwiML On0 { get; set; }
        
        public TwiML OnStar { get; set; }

        public TwiML OnHash { get; set; }


        public Manu(TwiML on1, TwiML on2, TwiML on3, TwiML on4, TwiML on5, TwiML on6, TwiML on7, TwiML on8,
            TwiML on9, TwiML on0, TwiML onStar, TwiML onHash) : base("Manu")
        {
            On1 = on1;
            On2 = on2;
            On3 = on3;
            On4 = on4;
            On5 = on5;
            On6 = on6;
            On7 = on7;
            On8 = on8;
            On9 = on9;
            On0 = on0;
            OnStar = onStar;
            OnHash = onHash;
        }

        /// <summary>
        /// Return the attributes of the TwiML tag
        /// </summary>
        protected override List<XAttribute> GetElementAttributes()
        {
            var attributes = new List<XAttribute>();
            return attributes;
        }

        /// <summary>
        /// Create a new <Say/> element and append it as a child of this element.
        /// </summary>
        /// <param name="message"> Message to say, the body of the TwiML Element. </param>
        /// <param name="voice"> Voice to use </param>
        /// <param name="loop"> Times to loop message </param>
        /// <param name="language"> Message langauge </param>
        public Manu Say(string message = null,
            Say.VoiceEnum voice = null,
            int? loop = null,
            Say.LanguageEnum language = null)
        {
            var newChild = new Say(message, voice, loop, language);
            this.Append(newChild);
            return this;
        }

        /// <summary>
        /// Append a <Say/> element as a child of this element
        /// </summary>
        /// <param name="say"> A Say instance. </param>
        [System.Obsolete("This method is deprecated, use .Append() instead.")]
        public Manu Say(Say say)
        {
            this.Append(say);
            return this;
        }

        /// <summary>
        /// Create a new <Pause/> element and append it as a child of this element.
        /// </summary>
        /// <param name="length"> Length in seconds to pause </param>
        public Manu Pause(int? length = null)
        {
            var newChild = new Pause(length);
            this.Append(newChild);
            return this;
        }

        /// <summary>
        /// Append a <Pause/> element as a child of this element
        /// </summary>
        /// <param name="pause"> A Pause instance. </param>
        [System.Obsolete("This method is deprecated, use .Append() instead.")]
        public Manu Pause(Pause pause)
        {
            this.Append(pause);
            return this;
        }

        /// <summary>
        /// Create a new <Play/> element and append it as a child of this element.
        /// </summary>
        /// <param name="url"> Media URL, the body of the TwiML Element. </param>
        /// <param name="loop"> Times to loop media </param>
        /// <param name="digits"> Play DTMF tones for digits </param>
        public Manu Play(Uri url = null, int? loop = null, string digits = null)
        {
            var newChild = new Play(url, loop, digits);
            this.Append(newChild);
            return this;
        }

        /// <summary>
        /// Append a <Play/> element as a child of this element
        /// </summary>
        /// <param name="play"> A Play instance. </param>
        [System.Obsolete("This method is deprecated, use .Append() instead.")]
        public Manu Play(Play play)
        {
            this.Append(play);
            return this;
        }

        /// <summary>
        /// Append a child TwiML element to this element returning this element to allow chaining.
        /// </summary>
        /// <param name="childElem"> Child TwiML element to add </param>
        public new Manu Append(TwiML childElem)
        {
            return (Manu)base.Append(childElem);
        }
    }
}
